{
  "_args": [
    [
      {
        "raw": "minimist@github:liskhq/minimist#2f27878",
        "scope": null,
        "escapedName": "minimist",
        "name": "minimist",
        "rawSpec": "github:liskhq/minimist#2f27878",
        "spec": "github:liskhq/minimist#2f27878",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:liskhq/minimist.git#2f27878",
          "sshUrl": "git+ssh://git@github.com/liskhq/minimist.git#2f27878",
          "httpsUrl": "git+https://github.com/liskhq/minimist.git#2f27878",
          "gitUrl": "git://github.com/liskhq/minimist.git#2f27878",
          "shortcut": "github:liskhq/minimist#2f27878",
          "directUrl": "https://raw.githubusercontent.com/liskhq/minimist/2f27878/package.json"
        }
      },
      "C:\\Users\\davy\\AppData\\Roaming\\npm\\node_modules\\lisk-commander\\node_modules\\vorpal"
    ]
  ],
  "_from": "liskhq/minimist#2f27878",
  "_id": "minimist@1.2.0",
  "_inCache": true,
  "_location": "/lisk-commander/minimist",
  "_phantomChildren": {},
  "_requested": {
    "raw": "minimist@github:liskhq/minimist#2f27878",
    "scope": null,
    "escapedName": "minimist",
    "name": "minimist",
    "rawSpec": "github:liskhq/minimist#2f27878",
    "spec": "github:liskhq/minimist#2f27878",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:liskhq/minimist.git#2f27878",
      "sshUrl": "git+ssh://git@github.com/liskhq/minimist.git#2f27878",
      "httpsUrl": "git+https://github.com/liskhq/minimist.git#2f27878",
      "gitUrl": "git://github.com/liskhq/minimist.git#2f27878",
      "shortcut": "github:liskhq/minimist#2f27878",
      "directUrl": "https://raw.githubusercontent.com/liskhq/minimist/2f27878/package.json"
    }
  },
  "_requiredBy": [
    "/lisk-commander/vorpal"
  ],
  "_resolved": "git://github.com/liskhq/minimist.git#2f27878dc10167bea5d0e56705b03158f7e5d876",
  "_shasum": "34444f24b1eb7ba69faf1004acd2c0060b087cf7",
  "_shrinkwrap": null,
  "_spec": "minimist@github:liskhq/minimist#2f27878",
  "_where": "C:\\Users\\davy\\AppData\\Roaming\\npm\\node_modules\\lisk-commander\\node_modules\\vorpal",
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "bugs": {
    "url": "https://github.com/substack/minimist/issues"
  },
  "dependencies": {},
  "description": "parse argument options",
  "devDependencies": {
    "covert": "^1.0.0",
    "tap": "~0.4.0",
    "tape": "^3.5.0"
  },
  "gitHead": "2f27878dc10167bea5d0e56705b03158f7e5d876",
  "homepage": "https://github.com/substack/minimist",
  "keywords": [
    "argv",
    "getopt",
    "parser",
    "optimist"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "minimist",
  "optionalDependencies": {},
  "readme": "# minimist\r\n\r\nparse argument options\r\n\r\nThis module is the guts of optimist's argument parser without all the\r\nfanciful decoration.\r\n\r\n[![browser support](https://ci.testling.com/substack/minimist.png)](http://ci.testling.com/substack/minimist)\r\n\r\n[![build status](https://secure.travis-ci.org/substack/minimist.png)](http://travis-ci.org/substack/minimist)\r\n\r\n# example\r\n\r\n``` js\r\nvar argv = require('minimist')(process.argv.slice(2));\r\nconsole.dir(argv);\r\n```\r\n\r\n```\r\n$ node example/parse.js -a beep -b boop\r\n{ _: [], a: 'beep', b: 'boop' }\r\n```\r\n\r\n```\r\n$ node example/parse.js -x 3 -y 4 -n5 -abc --beep=boop foo bar baz\r\n{ _: [ 'foo', 'bar', 'baz' ],\r\n  x: 3,\r\n  y: 4,\r\n  n: 5,\r\n  a: true,\r\n  b: true,\r\n  c: true,\r\n  beep: 'boop' }\r\n```\r\n\r\n# methods\r\n\r\n``` js\r\nvar parseArgs = require('minimist')\r\n```\r\n\r\n## var argv = parseArgs(args, opts={})\r\n\r\nReturn an argument object `argv` populated with the array arguments from `args`.\r\n\r\n`argv._` contains all the arguments that didn't have an option associated with\r\nthem.\r\n\r\nNumeric-looking arguments will be returned as numbers unless `opts.string` or\r\n`opts.boolean` is set for that argument name.\r\n\r\nAny arguments after `'--'` will not be parsed and will end up in `argv._`.\r\n\r\noptions can be:\r\n\r\n* `opts.string` - a string or array of strings argument names to always treat as\r\nstrings\r\n* `opts.boolean` - a boolean, string or array of strings to always treat as\r\nbooleans. if `true` will treat all double hyphenated arguments without equal signs\r\nas boolean (e.g. affects `--foo`, not `-f` or `--foo=bar`)\r\n* `opts.alias` - an object mapping string names to strings or arrays of string\r\nargument names to use as aliases\r\n* `opts.default` - an object mapping string argument names to default values\r\n* `opts.stopEarly` - when true, populate `argv._` with everything after the\r\nfirst non-option\r\n* `opts['--']` - when true, populate `argv._` with everything before the `--`\r\nand `argv['--']` with everything after the `--`. Here's an example:\r\n\r\n  ```\r\n  > require('./')('one two three -- four five --six'.split(' '), { '--': true })\r\n  { _: [ 'one', 'two', 'three' ],\r\n    '--': [ 'four', 'five', '--six' ] }\r\n  ```\r\n\r\n  Note that with `opts['--']` set, parsing for arguments still stops after the\r\n  `--`.\r\n\r\n* `opts.unknown` - a function which is invoked with a command line parameter not\r\ndefined in the `opts` configuration object. If the function returns `false`, the\r\nunknown option is not added to `argv`.\r\n\r\n# install\r\n\r\nWith [npm](https://npmjs.org) do:\r\n\r\n```\r\nnpm install minimist\r\n```\r\n\r\n# license\r\n\r\nMIT\r\n",
  "readmeFilename": "readme.markdown",
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/minimist.git"
  },
  "scripts": {
    "coverage": "covert test/*.js",
    "test": "tap test/*.js"
  },
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/6..latest",
      "ff/5",
      "firefox/latest",
      "chrome/10",
      "chrome/latest",
      "safari/5.1",
      "safari/latest",
      "opera/12"
    ]
  },
  "version": "1.2.0"
}
